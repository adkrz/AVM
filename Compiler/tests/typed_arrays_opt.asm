PUSHN 9
PUSH16 @string_1
SYSCALL Std.PrintString
PUSH_REG 1
STORE_LOCAL16 0
PUSH 5
PUSHN2
LOAD_LOCAL16 0
PUSH 11
STORE_GLOBAL2
LOAD_LOCAL16 0
INC16
PUSH 22
STORE_GLOBAL2
LOAD_LOCAL16 0
PUSH16 #2
ADD16
PUSH 33
STORE_GLOBAL2
LOAD_LOCAL16 0
PUSH16 #3
ADD16
PUSH 44
STORE_GLOBAL2
PUSH 4
STORE_LOCAL 2
LOAD_LOCAL16 0
LOAD_LOCAL 2
MACRO_ADD8_TO_16
PUSH 55
STORE_GLOBAL2
PUSH 0
STORE_LOCAL 3
:while3_begin
LOAD_LOCAL 3
PUSH 4
GREATER_OR_EQ
JF @while3_endwhile
LOAD_LOCAL16 0
LOAD_LOCAL 3
MACRO_ADD8_TO_16
LOAD_GLOBAL
SYSCALL Std.PrintInt
POP
SYSCALL Std.PrintNewLine
LOAD_LOCAL 3
INC
STORE_LOCAL 3
JMP @while3_begin
:while3_endwhile
PUSH16 @string_2
SYSCALL Std.PrintString
PUSH 0
STORE_LOCAL 4
LOAD_LOCAL16 0
LOAD_LOCAL 4
CALL @function_sum8bit
STORE_LOCAL 4
POPN 1
LOAD_LOCAL 4
SYSCALL Std.PrintInt
POP
SYSCALL Std.PrintNewLine
PUSH16 @string_3
SYSCALL Std.PrintString
PUSH_REG 1
STORE_LOCAL16 5
PUSH 5
PUSH 2
MUL
PUSHN2
LOAD_LOCAL16 5
PUSH16 #11
STORE_GLOBAL216
LOAD_LOCAL16 5
PUSH16 #1
PUSH16 #2
MUL16
ADD16
PUSH16 #22
STORE_GLOBAL216
LOAD_LOCAL16 5
PUSH16 #2
PUSH16 #2
MUL16
ADD16
PUSH16 #33
STORE_GLOBAL216
LOAD_LOCAL16 5
PUSH16 #3
PUSH16 #2
MUL16
ADD16
PUSH16 #44
STORE_GLOBAL216
LOAD_LOCAL16 5
PUSH16 #4
PUSH16 #2
MUL16
ADD16
PUSH16 #55
STORE_GLOBAL216
PUSH 0
STORE_LOCAL 3
:while4_begin
LOAD_LOCAL 3
PUSH 4
GREATER_OR_EQ
JF @while4_endwhile
LOAD_LOCAL16 5
LOAD_LOCAL 3
MACRO_POP_EXT_X2_ADD16
LOAD_GLOBAL16
SYSCALL Std.PrintInt16
POPN 2
SYSCALL Std.PrintNewLine
LOAD_LOCAL 3
INC
STORE_LOCAL 3
JMP @while4_begin
:while4_endwhile
PUSH16 @string_2
SYSCALL Std.PrintString
PUSH16 #0
STORE_LOCAL16 7
LOAD_LOCAL16 5
LOAD_LOCAL16 7
CALL @function_sum16bit
STORE_LOCAL16 7
POPN 2
LOAD_LOCAL16 7
SYSCALL Std.PrintInt16
POPN 2
SYSCALL Std.PrintNewLine
HALT
:function_sum8bit
PUSHN 1
PUSH 0
STORE_LOCAL 0
PUSH 0
STORE_ARG 1
:while1_begin
LOAD_LOCAL 0
PUSH 4
GREATER_OR_EQ
JF @while1_endwhile
LOAD_ARG 1
LOAD_ARG16 3
LOAD_LOCAL 0
MACRO_ADD8_TO_16
LOAD_GLOBAL
ADD
STORE_ARG 1
LOAD_LOCAL 0
INC
STORE_LOCAL 0
JMP @while1_begin
:while1_endwhile
RET
:function_sum16bit
PUSHN 1
PUSH 0
STORE_LOCAL 0
PUSH16 #0
STORE_ARG16 2
:while2_begin
LOAD_LOCAL 0
PUSH 4
GREATER_OR_EQ
JF @while2_endwhile
LOAD_ARG16 2
LOAD_ARG16 4
LOAD_LOCAL 0
MACRO_POP_EXT_X2_ADD16
LOAD_GLOBAL16
ADD16
STORE_ARG16 2
LOAD_LOCAL 0
INC
STORE_LOCAL 0
JMP @while2_begin
:while2_endwhile
RET
:string_1
"8-bit version\n"
:string_2
"Sum="
:string_3
"16-bit version\n"